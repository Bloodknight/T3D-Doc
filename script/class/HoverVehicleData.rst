HoverVehicleData
================

Defines the properties of a HoverVehicle.

Inherit:
	:doc:`VehicleData`

Description
-----------

Defines the properties of a HoverVehicle.

Fields
------

.. cpp:member:: float  HoverVehicleData::brakingActivationSpeed

	Maximum speed below which a braking force is applied.

.. cpp:member:: float  HoverVehicleData::brakingForce

	Force generated by braking. The vehicle is considered to be braking if it is moving, but the throttle is off, and no left or right thrust is being applied. This force is only applied when the vehicle's velocity is less than brakingActivationSpeed.

.. cpp:member:: float  HoverVehicleData::dragForce

	Drag force factor that acts opposite to the vehicle velocity. Also used to determnine the vehicle's maxThrustSpeed.

.. cpp:member:: ParticleEmitterData HoverVehicleData::dustTrailEmitter

	Emitter to generate particles for the vehicle's dust trail. The trail of dust particles is generated only while the vehicle is moving.

.. cpp:member:: float  HoverVehicleData::dustTrailFreqMod

	Number of dust trail particles to generate based on vehicle speed. The vehicle's speed is divided by this value to determine how many particles to generate each frame. Lower values give a more dense trail, higher values a more sparse trail.

.. cpp:member:: Point3F  HoverVehicleData::dustTrailOffset

	"X Y Z" offset from the vehicle's origin from which to generate dust trail particles. By default particles are emitted directly beneath the origin of the vehicle model.

.. cpp:member:: SFXProfile HoverVehicleData::engineSound

	Looping engine sound. The volume is dynamically adjusted based on the current thrust level.

.. cpp:member:: float  HoverVehicleData::floatingGravMag

	Scale factor applied to the vehicle gravitational force when the vehicle is floating.

.. cpp:member:: float  HoverVehicleData::floatingThrustFactor

	Scalar applied to the vehicle's thrust force when the vehicle is floating.

.. cpp:member:: SFXProfile HoverVehicleData::floatSound

	Looping sound played while the vehicle is floating.

.. cpp:member:: ParticleEmitterData HoverVehicleData::forwardJetEmitter

	Emitter to generate particles for forward jet thrust. Forward jet thrust particles are emitted from model nodes JetNozzle0 and JetNozzle1.

.. cpp:member:: float  HoverVehicleData::gyroDrag

	Damping torque that acts against the vehicle's current angular momentum.

.. cpp:member:: SFXProfile HoverVehicleData::jetSound

	Looping sound played when the vehicle is jetting.

.. cpp:member:: float  HoverVehicleData::mainThrustForce

	Force generated by thrusting the vehicle forward. Also used to determine the maxThrustSpeed:

	Example::

		maxThrustSpeed = (mainThrustForce + strafeThrustForce) / dragForce;

.. cpp:member:: float  HoverVehicleData::normalForce

	Force generated in the ground normal direction when the vehicle is not floating (within stabalizer length from the ground).

.. cpp:member:: float  HoverVehicleData::pitchForce

	Pitch (rotation about the X-axis) force applied when steering in the y-axis direction.

.. cpp:member:: float  HoverVehicleData::restorativeForce

	Force generated to stabalize the vehicle (return it to neutral pitch/roll) when the vehicle is floating (more than stabalizer length from the ground.

.. cpp:member:: float  HoverVehicleData::reverseThrustForce

	Force generated by thrusting the vehicle backward.

.. cpp:member:: float  HoverVehicleData::rollForce

	Roll (rotation about the Y-axis) force applied when steering in the x-axis direction.

.. cpp:member:: float  HoverVehicleData::stabDampingConstant

	Damping spring force acting against changes in the stabalizer length.

.. cpp:member:: float  HoverVehicleData::stabLenMax

	Length of the base stabalizer when travelling at maximum speed (maxThrustSpeed).

.. cpp:member:: float  HoverVehicleData::stabLenMin

	Length of the base stabalizer when travelling at minimum speed (0). Each tick, the vehicle performs 2 raycasts (from the center back and center front of the vehicle) to check for contact with the ground. The base stabalizer length determines the length of that raycast; if neither raycast hit the ground, the vehicle is floating, stabalizer spring and ground normal forces are not applied.

.. cpp:member:: float  HoverVehicleData::stabSpringConstant

	Value used to generate stabalizer spring force. The force generated depends on stabilizer compression, that is how close the vehicle is to the ground proportional to current stabalizer length.

.. cpp:member:: float  HoverVehicleData::steeringForce

	Yaw (rotation about the Z-axis) force applied when steering in the x-axis direction.about the vehicle's Z-axis).

.. cpp:member:: float  HoverVehicleData::strafeThrustForce

	Force generated by thrusting the vehicle to one side. Also used to determine the vehicle's maxThrustSpeed.

.. cpp:member:: float  HoverVehicleData::triggerTrailHeight

	Maximum height above surface to emit dust trail particles. If the vehicle is less than triggerTrailHeight above a static surface with a material that has 'showDust' set to true, the vehicle will emit particles from the dustTrailEmitter.

.. cpp:member:: float  HoverVehicleData::turboFactor

	Scale factor applied to the vehicle's thrust force when jetting.

.. cpp:member:: float  HoverVehicleData::vertFactor

	Scalar applied to the vertical portion of the velocity drag acting on the vehicle. For the horizontal (X and Y) components of velocity drag, a factor of 0.25 is applied when the vehicle is floating, and a factor of 1.0 is applied when the vehicle is not floating. This velocity drag is multiplied by the vehicle's dragForce, as defined above, and the result is subtracted from it's movement force.
